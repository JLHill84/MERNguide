{"version":3,"sources":["shared/hooks/http-hook.js","shared/components/UIElements/Backdrop.js","shared/components/UIElements/Modal.js","shared/components/FormElements/Button.js","shared/components/UIElements/ErrorModal.js","shared/components/UIElements/LoadingSpinner.js","shared/components/UIElements/Card.js","shared/components/UIElements/Map.js","shared/context/auth-context.js","places/components/PlaceItem.js","places/components/PlaceList.js","places/pages/UserPlaces.js","shared/components/Navigation/MainHeader.js","shared/components/Navigation/NavLinks.js","shared/components/Navigation/SideDrawer.js","shared/components/Navigation/MainNavigation.js","shared/components/UIElements/Avatar.js","users/components/UserItem.js","users/components/UsersList.js","users/pages/Users.js","shared/util/validators.js","shared/components/FormElements/Input.js","shared/components/FormElements/ImageUpload.js","shared/hooks/form-hook.js","places/pages/NewPlace.js","places/pages/UpdatePlace.js","users/pages/Auth.js","shared/hooks/auth-hook.js","App.js","serviceWorker.js","index.js"],"names":["useHttpClient","useState","isLoading","setIsLoading","error","setError","activeHttpRequests","useRef","sendRequest","useCallback","url","a","method","body","headers","httpAbortCtrll","AbortController","current","push","fetch","signal","response","json","responseData","filter","reqCtrl","ok","Error","message","useEffect","forEach","abortCtrl","abort","clearError","Backdrop","props","ReactDOM","createPortal","className","onClick","document","getElementById","ModalOverlay","content","style","headerClass","header","onSubmit","event","preventDefault","contentClass","children","footerClass","footer","Modal","Fragment","show","onCancel","CSSTransition","in","timeout","mountOnEnter","unmountOnExit","classNames","Button","href","size","inverse","danger","to","exact","type","disabled","ErrorModal","onClear","LoadingSpinner","asOverlay","Card","Map","mapRef","center","zoom","map","window","google","maps","Marker","position","ref","AuthContext","createContext","isLoggedIn","userId","token","login","logout","PlaceItem","auth","useContext","showMap","setShowMap","showConfirmModal","setShowConfirmModal","closeMapHandler","cancelDeleteHandler","confirmDeleteHandler","process","id","Authorization","onDelete","address","coordinates","src","image","alt","title","description","creatorId","PlaceList","items","length","place","key","creator","location","onDeletePlace","UserPlaces","loadedPlaces","setLoadedPlaces","useParams","places","fetchPlaces","deletedPlaceId","prevPlaces","MainHeader","NavLinks","SideDrawer","MainNavigation","drawerIsOpen","setDrawerIsOpen","closeDrawerHandler","Avatar","width","height","UserItem","name","placeCount","UsersList","user","Users","loadedUsers","setLoadedUsers","users","fetchUsers","VALIDATOR_MINLENGTH","val","validate","value","validators","isValid","validator","trim","test","inputReducer","state","action","isTouched","Input","useReducer","initialValue","initialValid","inputState","dispatch","onInput","changeHandler","target","touchHandler","element","placeholder","onChange","onBlur","rows","htmlFor","label","errorText","ImageUpload","file","setFile","previewUrl","setPreviewUrl","setIsValid","filePickerRef","fileReader","FileReader","onload","result","readAsDataURL","display","accept","pickedFile","fileIsValid","files","click","formReducer","formIsValid","inputId","inputs","useForm","initialInputs","initialFormValidity","formState","inputHandler","setFormData","inputData","formValidity","console","log","NewPlace","history","useHistory","placeSubmitHandler","formData","FormData","append","UpdatePlace","loadedPlace","setLoadedPlace","placeId","fetchPlace","placeUpdateSubmitHandler","JSON","stringify","logoutTimer","Auth","isLoginMode","setIsLoginMode","email","password","authSubmitHandler","autocomplete","undefined","prevMode","App","routes","setToken","tokenExpirationDate","setTokenExpirationDate","setUserId","uid","expirationDate","Date","getTime","localStorage","setItem","expiration","toISOString","removeItem","remainingTime","setTimeout","clearTimeout","storedData","parse","getItem","useAuth","path","Provider","Boolean","hostname","match","render","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.7d5a7078.chunk.js","sourcesContent":["import { useState, useCallback, useRef, useEffect } from \"react\";\n\nexport const useHttpClient = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState();\n\n  const activeHttpRequests = useRef([]);\n\n  const sendRequest = useCallback(\n    async (url, method = \"GET\", body = null, headers = {}) => {\n      setIsLoading(true);\n      const httpAbortCtrll = new AbortController();\n      activeHttpRequests.current.push(httpAbortCtrll);\n      try {\n        const response = await fetch(url, {\n          method,\n          body,\n          headers,\n          signal: httpAbortCtrll.signal\n        });\n\n        const responseData = await response.json();\n\n        activeHttpRequests.current = activeHttpRequests.current.filter(\n          reqCtrl => reqCtrl !== httpAbortCtrll\n        );\n\n        if (!response.ok) {\n          throw new Error(responseData.message);\n        }\n\n        setIsLoading(false);\n        return responseData;\n      } catch (error) {\n        setError(error.message);\n        setIsLoading(false);\n        throw error;\n      }\n    },\n    []\n  );\n\n  const clearError = () => {\n    setError(null);\n  };\n\n  useEffect(() => {\n    return () => {\n      activeHttpRequests.current.forEach(abortCtrl => abortCtrl.abort());\n    };\n  }, []);\n  return { isLoading, error, sendRequest, clearError };\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './Backdrop.css';\n\nconst Backdrop = props => {\n  return ReactDOM.createPortal(\n    <div className=\"backdrop\" onClick={props.onClick}></div>,\n    document.getElementById('backdrop-hook')\n  );\n};\n\nexport default Backdrop;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Backdrop from \"./Backdrop\";\nimport { CSSTransition } from \"react-transition-group\";\n\nimport \"./Modal.css\";\n\nconst ModalOverlay = props => {\n  const content = (\n    <div className={`modal ${props.className}`} style={props.style}>\n      <header className={`modal__header ${props.headerClass}`}>\n        <h2>{props.header}</h2>\n      </header>\n      <form\n        onSubmit={\n          props.onSubmit ? props.onSubmit : event => event.preventDefault()\n        }\n      >\n        <div className={`modal__content ${props.contentClass}`}>\n          {props.children}\n        </div>\n        <footer className={`modal__footer ${props.footerClass}`}>\n          {props.footer}\n        </footer>\n      </form>\n    </div>\n  );\n  return ReactDOM.createPortal(content, document.getElementById(\"modal-hook\"));\n};\n\nconst Modal = props => {\n  return (\n    <React.Fragment>\n      {props.show && <Backdrop onClick={props.onCancel} />}\n      <CSSTransition\n        in={props.show}\n        timeout={200}\n        mountOnEnter\n        unmountOnExit\n        classNames=\"modal\"\n      >\n        <ModalOverlay {...props} />\n      </CSSTransition>\n    </React.Fragment>\n  );\n};\n\nexport default Modal;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport './Button.css';\n\nconst Button = props => {\n  if (props.href) {\n    return (\n      <a\n        className={`button button--${props.size || 'default'} ${props.inverse &&\n          'button--inverse'} ${props.danger && 'button--danger'}`}\n        href={props.href}\n      >\n        {props.children}\n      </a>\n    );\n  }\n  if (props.to) {\n    return (\n      <Link\n        to={props.to}\n        exact={props.exact}\n        className={`button button--${props.size || 'default'} ${props.inverse &&\n          'button--inverse'} ${props.danger && 'button--danger'}`}\n      >\n        {props.children}\n      </Link>\n    );\n  }\n  return (\n    <button\n      className={`button button--${props.size || 'default'} ${props.inverse &&\n        'button--inverse'} ${props.danger && 'button--danger'}`}\n      type={props.type}\n      onClick={props.onClick}\n      disabled={props.disabled}\n    >\n      {props.children}\n    </button>\n  );\n};\n\nexport default Button;\n","import React from 'react';\n\nimport Modal from './Modal';\nimport Button from '../FormElements/Button';\n\nconst ErrorModal = props => {\n  return (\n    <Modal\n      onCancel={props.onClear}\n      header=\"error\"\n      show={!!props.error}\n      footer={<Button onClick={props.onClear}>ok</Button>}\n    >\n      <p>{props.error}</p>\n    </Modal>\n  );\n};\n\nexport default ErrorModal;\n","import React from 'react';\n\nimport './LoadingSpinner.css';\n\nconst LoadingSpinner = props => {\n  return (\n    <div className={`${props.asOverlay && 'loading-spinner__overlay'}`}>\n      <div className=\"lds-dual-ring\"></div>\n    </div>\n  );\n};\n\nexport default LoadingSpinner;\n","import React from \"react\";\n\nimport \"./Card.css\";\n\nconst Card = props => {\n  return (\n    <div className={`card ${props.className}`} style={props.style}>\n      {props.children}\n    </div>\n  );\n};\n\nexport default Card;\n","import React, { useRef, useEffect } from \"react\";\n\nimport \"./Map.css\";\n\nconst Map = props => {\n  const mapRef = useRef();\n\n  const { center, zoom } = props;\n\n  useEffect(() => {\n    const map = new window.google.maps.Map(mapRef.current, {\n      center: center,\n      zoom: zoom\n    });\n\n    new window.google.maps.Marker({ position: center, map: map });\n  }, [center, zoom]);\n\n  return (\n    <div\n      ref={mapRef}\n      className={`map ${props.className}`}\n      style={props.style}\n    ></div>\n  );\n};\n\nexport default Map;\n","import { createContext } from \"react\";\n\nexport const AuthContext = createContext({\n  isLoggedIn: false,\n  userId: null,\n  token: null,\n  login: () => {},\n  logout: () => {}\n});\n","import React, { useState, useContext } from \"react\";\n\nimport Card from \"../../shared/components/UIElements/Card\";\nimport Button from \"../../shared/components/FormElements/Button\";\nimport Modal from \"../../shared/components/UIElements/Modal\";\nimport Map from \"../../shared/components/UIElements/Map\";\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\nimport { AuthContext } from \"../../shared/context/auth-context\";\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\n\nimport \"./PlaceItem.css\";\n\nconst PlaceItem = props => {\n  const { isLoading, error, clearError, sendRequest } = useHttpClient();\n  const auth = useContext(AuthContext);\n  const [showMap, setShowMap] = useState(false);\n  const [showConfirmModal, setShowConfirmModal] = useState(false);\n\n  const openMapHandler = () => setShowMap(true);\n  const closeMapHandler = () => setShowMap(false);\n\n  const showDeleteWarningHandler = () => {\n    setShowConfirmModal(true);\n  };\n\n  const cancelDeleteHandler = () => {\n    setShowConfirmModal(false);\n  };\n\n  const confirmDeleteHandler = async () => {\n    setShowConfirmModal(false);\n    try {\n      sendRequest(\n        `${process.env.REACT_APP_BACKEND_URL}/places/${props.id}`,\n        \"DELETE\",\n        null,\n        { Authorization: \"Bearer \" + auth.token }\n      );\n      props.onDelete(props.id);\n    } catch (error) {\n      //errors handled in http-hook\n    }\n  };\n\n  return (\n    <React.Fragment>\n      <ErrorModal error={error} onClear={clearError} />\n      <Modal\n        show={showMap}\n        onCancel={closeMapHandler}\n        header={props.address}\n        contentClass=\"place-item__modal-content\"\n        footerClass=\"place-item__modal-actions\"\n        footer={<Button onClick={closeMapHandler}>exit</Button>}\n      >\n        <div className=\"map-container\">\n          <Map center={props.coordinates} zoom={16} />\n        </div>\n      </Modal>\n      <Modal\n        show={showConfirmModal}\n        onCancel={cancelDeleteHandler}\n        header=\"confirm delete\"\n        footerClass=\"place-item__modal-actions\"\n        footer={\n          <React.Fragment>\n            <Button inverse onClick={cancelDeleteHandler}>\n              cancel\n            </Button>\n            <Button danger onClick={confirmDeleteHandler}>\n              delete\n            </Button>\n          </React.Fragment>\n        }\n      >\n        <p>you sure?</p>\n      </Modal>\n      <li className=\"place-item\">\n        <Card className=\"place-item__content\">\n          {isLoading && <LoadingSpinner asOverlay />}\n          <div className=\"place-item__image\">\n            <img\n              src={`${process.env.REACT_APP_ASSET_URL}/${props.image}`}\n              alt={props.title}\n            />\n          </div>\n          <div className=\"place-item__info\">\n            <h2>{props.title}</h2>\n            <h3>{props.address}</h3>\n            <p>{props.description}</p>\n          </div>\n          <div className=\"place-item__actions\">\n            <Button inverse onClick={openMapHandler}>\n              map\n            </Button>\n            {auth.userId === props.creatorId && (\n              <Button to={`/places/${props.id}`}>edit</Button>\n            )}\n            {auth.userId === props.creatorId && (\n              <Button danger onClick={showDeleteWarningHandler}>\n                delete\n              </Button>\n            )}\n          </div>\n        </Card>\n      </li>\n    </React.Fragment>\n  );\n};\n\nexport default PlaceItem;\n","import React from \"react\";\n\nimport PlaceItem from \"../components/PlaceItem\";\nimport Button from \"../../shared/components/FormElements/Button\";\nimport Card from \"../../shared/components/UIElements/Card\";\nimport \"./PlaceList.css\";\n\nconst PlaceList = props => {\n  if (props.items.length === 0) {\n    return (\n      <div className=\"place-list center\">\n        <Card>\n          <h2>no places yet. go make one!</h2>\n          <Button to=\"/places/new\">share a place!</Button>\n        </Card>\n      </div>\n    );\n  }\n\n  return (\n    <ul className=\"place-list\">\n      {props.items.map(place => (\n        <PlaceItem\n          key={place.id}\n          id={place.id}\n          image={place.image}\n          title={place.title}\n          description={place.description}\n          address={place.address}\n          creatorId={place.creator}\n          coordinates={place.location}\n          onDelete={props.onDeletePlace}\n        />\n      ))}\n    </ul>\n  );\n};\n\nexport default PlaceList;\n","import React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\n\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\nimport PlaceList from \"../components/PlaceList\";\n\nconst UserPlaces = props => {\n  const [loadedPlaces, setLoadedPlaces] = useState();\n  const { isLoading, error, clearError, sendRequest } = useHttpClient();\n\n  const userId = useParams().userId;\n\n  useEffect(() => {\n    const fetchPlaces = async () => {\n      try {\n        const responseData = await sendRequest(\n          `${process.env.REACT_APP_BACKEND_URL}/places/user/${userId}`\n        );\n        setLoadedPlaces(responseData.places);\n      } catch (error) {\n        // errors are handled in http-hook\n      }\n    };\n    fetchPlaces();\n  }, [sendRequest, userId]);\n\n  const placeDeletedHandler = deletedPlaceId => {\n    setLoadedPlaces(prevPlaces =>\n      prevPlaces.filter(place => place.id !== deletedPlaceId)\n    );\n  };\n\n  return (\n    <React.Fragment>\n      <ErrorModal error={error} onClear={clearError} />\n      {isLoading && (\n        <div className=\"center\">\n          <LoadingSpinner asOverlay />\n        </div>\n      )}\n      {!isLoading && loadedPlaces && (\n        <PlaceList items={loadedPlaces} onDeletePlace={placeDeletedHandler} />\n      )}\n    </React.Fragment>\n  );\n};\n\nexport default UserPlaces;\n","import React from \"react\";\n\nimport \"./MainHeader.css\";\n\nconst MainHeader = props => {\n  return <header className=\"main-header\">{props.children}</header>;\n};\n\nexport default MainHeader;\n","import React, { useContext } from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nimport { AuthContext } from \"../../context/auth-context\";\nimport \"./NavLinks.css\";\n\nconst NavLinks = props => {\n  const auth = useContext(AuthContext);\n\n  return (\n    <ul className=\"nav-links\">\n      <li>\n        <NavLink to=\"/\" exact>\n          users\n        </NavLink>\n      </li>\n      {auth.isLoggedIn && (\n        <li>\n          <NavLink to={`/${auth.userId}/places`}>your places</NavLink>\n        </li>\n      )}\n      {auth.isLoggedIn && (\n        <li>\n          <NavLink to=\"/places/new\">add place</NavLink>\n        </li>\n      )}\n      {!auth.isLoggedIn && (\n        <li>\n          <NavLink to=\"/auth\">sign-in/up</NavLink>\n        </li>\n      )}\n      {auth.isLoggedIn && (\n        <li>\n          <button onClick={auth.logout}>logout</button>\n        </li>\n      )}\n    </ul>\n  );\n};\n\nexport default NavLinks;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { CSSTransition } from \"react-transition-group\";\n\nimport \"./SideDrawer.css\";\n\nconst SideDrawer = props => {\n  const content = (\n    <CSSTransition\n      in={props.show}\n      timeout={200}\n      classNames=\"slide-in-left\"\n      mountOnEnter\n      unmountOnExit\n    >\n      <aside className=\"side-drawer\" onClick={props.onClick}>\n        {props.children}\n      </aside>\n    </CSSTransition>\n  );\n\n  return ReactDOM.createPortal(content, document.getElementById(\"drawer-hook\"));\n};\n\nexport default SideDrawer;\n","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport Backdrop from \"../UIElements/Backdrop\";\nimport MainHeader from \"./MainHeader\";\nimport NavLinks from \"./NavLinks\";\nimport SideDrawer from \"./SideDrawer\";\nimport \"./MainNavigation.css\";\n\nconst MainNavigation = props => {\n  const [drawerIsOpen, setDrawerIsOpen] = useState(false);\n\n  const openDrawerHandler = () => {\n    setDrawerIsOpen(true);\n  };\n\n  const closeDrawerHandler = () => {\n    setDrawerIsOpen(false);\n  };\n  return (\n    <React.Fragment>\n      {drawerIsOpen && <Backdrop onClick={closeDrawerHandler} />}\n\n      <SideDrawer show={drawerIsOpen} onClick={closeDrawerHandler}>\n        <nav className=\"main-navigation__drawer-nav\">\n          <NavLinks />\n        </nav>\n      </SideDrawer>\n\n      <MainHeader>\n        <button className=\"main-navigation__menu-btn\" onClick={openDrawerHandler}>\n          <span />\n          <span />\n          <span />\n        </button>\n        <h2 className=\"main-navigation__title\">\n          <Link to='/'>oh, the places we've been</Link>\n        </h2>\n        <nav className=\"main-navigation__header-nav\">\n          <NavLinks />\n        </nav>\n      </MainHeader>\n    </React.Fragment>\n  );\n};\n\nexport default MainNavigation;\n","import React from 'react';\n\nimport './Avatar.css';\n\nconst Avatar = props => {\n  return (\n    <div className={`avatar ${props.className}`} style={props.style}>\n      <img\n        src={props.image}\n        alt={props.alt}\n        style={{ width: props.width, height: props.width }}\n      />\n    </div>\n  );\n};\n\nexport default Avatar;\n","import React from \"react\";\nimport Avatar from \"../../shared/components/UIElements/Avatar\";\nimport Card from \"../../shared/components/UIElements/Card\";\nimport { Link } from \"react-router-dom\";\n\nimport \"./UserItem.css\";\n\nconst UserItem = props => {\n  return (\n    <li className=\"user-item\">\n      <Card className=\"user-item__content\">\n        <Link to={`/${props.id}/places`}>\n          <div className=\"user-item__image\">\n            <Avatar\n              image={`${process.env.REACT_APP_ASSET_URL}/${props.image}`}\n              alt={props.name}\n            />\n          </div>\n          <div className=\"user-item__info\">\n            <h2>{props.name}</h2>\n            <h4>\n              {props.placeCount} {props.placeCount === 1 ? \"place\" : \"places\"}\n            </h4>\n          </div>\n        </Link>\n      </Card>\n    </li>\n  );\n};\n\nexport default UserItem;\n","import React from \"react\";\n\nimport UserItem from \"./UserItem\";\nimport Card from \"../../shared/components/UIElements/Card\";\nimport \"./UsersList.css\";\n\nconst UsersList = props => {\n  if (props.items.length === 0) {\n    return (\n      <div className=\"center\">\n        <Card>\n          <h3>no users, yet</h3>\n        </Card>\n      </div>\n    );\n  }\n\n  return (\n    <ul className=\"users-list\">\n      {props.items.map(user => (\n        <UserItem\n          key={user.id}\n          id={user.id}\n          image={user.image}\n          name={user.name}\n          placeCount={user.places.length}\n        />\n      ))}\n    </ul>\n  );\n};\n\nexport default UsersList;\n","import React, { useEffect, useState } from \"react\";\n\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\nimport UsersList from \"../components/UsersList\";\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\n\nconst Users = () => {\n  const { isLoading, sendRequest, error, clearError } = useHttpClient();\n  const [loadedUsers, setLoadedUsers] = useState();\n\n  useEffect(() => {\n    const fetchUsers = async () => {\n      try {\n        const responseData = await sendRequest(\n          `${process.env.REACT_APP_BACKEND_URL}/users`\n        );\n        setLoadedUsers(responseData.users);\n      } catch (error) {\n        // Errors handled in http-hook\n      }\n    };\n    fetchUsers();\n  }, [sendRequest]);\n\n  return (\n    <React.Fragment>\n      <ErrorModal error={error} onClear={clearError} />\n      {isLoading && (\n        <div className=\"center\">\n          <LoadingSpinner />\n        </div>\n      )}\n      {!isLoading && loadedUsers && <UsersList items={loadedUsers} />}\n    </React.Fragment>\n  );\n};\n\nexport default Users;\n","const VALIDATOR_TYPE_REQUIRE = 'REQUIRE';\nconst VALIDATOR_TYPE_MINLENGTH = 'MINLENGTH';\nconst VALIDATOR_TYPE_MAXLENGTH = 'MAXLENGTH';\nconst VALIDATOR_TYPE_MIN = 'MIN';\nconst VALIDATOR_TYPE_MAX = 'MAX';\nconst VALIDATOR_TYPE_EMAIL = 'EMAIL';\nconst VALIDATOR_TYPE_FILE = 'FILE';\n\nexport const VALIDATOR_REQUIRE = () => ({ type: VALIDATOR_TYPE_REQUIRE });\nexport const VALIDATOR_FILE = () => ({ type: VALIDATOR_TYPE_FILE });\nexport const VALIDATOR_MINLENGTH = val => ({\n  type: VALIDATOR_TYPE_MINLENGTH,\n  val: val\n});\nexport const VALIDATOR_MAXLENGTH = val => ({\n  type: VALIDATOR_TYPE_MAXLENGTH,\n  val: val\n});\nexport const VALIDATOR_MIN = val => ({ type: VALIDATOR_TYPE_MIN, val: val });\nexport const VALIDATOR_MAX = val => ({ type: VALIDATOR_TYPE_MAX, val: val });\nexport const VALIDATOR_EMAIL = () => ({ type: VALIDATOR_TYPE_EMAIL });\n\nexport const validate = (value, validators) => {\n  let isValid = true;\n  for (const validator of validators) {\n    if (validator.type === VALIDATOR_TYPE_REQUIRE) {\n      isValid = isValid && value.trim().length > 0;\n    }\n    if (validator.type === VALIDATOR_TYPE_MINLENGTH) {\n      isValid = isValid && value.trim().length >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAXLENGTH) {\n      isValid = isValid && value.trim().length <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MIN) {\n      isValid = isValid && +value >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAX) {\n      isValid = isValid && +value <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_EMAIL) {\n      isValid = isValid && /^\\S+@\\S+\\.\\S+$/.test(value);\n    }\n  }\n  return isValid;\n};\n","import React, { useReducer, useEffect } from \"react\";\n\nimport { validate } from \"../../util/validators\";\nimport \"./Input.css\";\n\nconst inputReducer = (state, action) => {\n  switch (action.type) {\n    case \"CHANGE\":\n      return {\n        ...state,\n        value: action.val,\n        isValid: validate(action.val, action.validators)\n      };\n    case \"TOUCH\":\n      return {\n        ...state,\n        isTouched: true\n      };\n    default:\n      return state;\n  }\n};\n\nconst Input = props => {\n  const [inputState, dispatch] = useReducer(inputReducer, {\n    value: props.initialValue || \"\",\n    isTouched: false,\n    isValid: props.initialValid || false\n  });\n\n  const { id, onInput } = props;\n  const { value, isValid } = inputState;\n\n  useEffect(() => {\n    onInput(id, value, isValid);\n  }, [id, value, isValid, onInput]);\n\n  const changeHandler = event => {\n    dispatch({\n      type: \"CHANGE\",\n      val: event.target.value,\n      validators: props.validators\n    });\n  };\n\n  const touchHandler = () => {\n    dispatch({\n      type: \"TOUCH\"\n    });\n  };\n\n  const element =\n    props.element === \"input\" ? (\n      <input\n        id={props.id}\n        type={props.type}\n        placeholder={props.placeholder}\n        onChange={changeHandler}\n        onBlur={touchHandler}\n        value={inputState.value}\n      />\n    ) : (\n      <textarea\n        id={props.id}\n        rows={props.rows || 3}\n        onChange={changeHandler}\n        onBlur={touchHandler}\n        value={inputState.value}\n      />\n    );\n\n  return (\n    <div\n      className={`form-control ${!inputState.isValid &&\n        inputState.isTouched &&\n        \"form-control--invalid\"}`}\n    >\n      <label htmlFor={props.id}>{props.label}</label>\n      {element}\n      {!inputState.isValid && inputState.isTouched && <p>{props.errorText}</p>}\n    </div>\n  );\n};\n\nexport default Input;\n","import React, { useRef, useState, useEffect } from \"react\";\n\nimport Button from \"./Button\";\nimport \"./ImageUpload.css\";\n\nconst ImageUpload = props => {\n  const [file, setFile] = useState();\n  const [previewUrl, setPreviewUrl] = useState();\n  const [isValid, setIsValid] = useState(false);\n\n  const filePickerRef = useRef();\n\n  useEffect(() => {\n    if (!file) {\n      return;\n    }\n    const fileReader = new FileReader();\n    fileReader.onload = () => {\n      setPreviewUrl(fileReader.result);\n    };\n    fileReader.readAsDataURL(file);\n  }, [file]);\n\n  const pickedHandler = event => {\n    let pickedFile;\n    let fileIsValid = isValid;\n    if (event.target.files && event.target.files.length === 1) {\n      pickedFile = event.target.files[0];\n      setFile(pickedFile);\n      setIsValid(true);\n      fileIsValid = true;\n    } else {\n      setIsValid(false);\n      fileIsValid = false;\n    }\n    props.onInput(props.id, pickedFile, fileIsValid);\n  };\n  const pickImageHandler = () => {\n    filePickerRef.current.click();\n  };\n\n  return (\n    <div className=\"form-control\">\n      <input\n        id={props.id}\n        ref={filePickerRef}\n        style={{ display: \"none\" }}\n        type=\"file\"\n        accept=\".jpg, .png, .jpeg\"\n        onChange={pickedHandler}\n      />\n      <div className={`image-upload ${props.center && \"center\"}`}>\n        <div className=\"image-upload__preview\">\n          {previewUrl && <img src={previewUrl} alt=\"Preview\" />}\n          {!previewUrl && <p>select an image</p>}\n        </div>\n        <Button type=\"button\" onClick={pickImageHandler}>\n          choose image\n        </Button>\n      </div>\n      {!isValid && <p>{props.errorText}</p>}\n    </div>\n  );\n};\n\nexport default ImageUpload;\n","import { useCallback, useReducer } from \"react\";\n\nconst formReducer = (state, action) => {\n  switch (action.type) {\n    case \"INPUT_CHANGE\":\n      let formIsValid = true;\n      for (const inputId in state.inputs) {\n        if (!state.inputs[inputId]) {\n          continue;\n        }\n        if (inputId === action.inputId) {\n          formIsValid = formIsValid && action.isValid;\n        } else {\n          formIsValid = formIsValid && state.inputs[inputId].isValid;\n        }\n      }\n      return {\n        ...state,\n        inputs: {\n          ...state.inputs,\n          [action.inputId]: { value: action.value, isValid: action.isValid }\n        },\n        isValid: formIsValid\n      };\n    case \"SET_DATA\":\n      return {\n        inputs: action.inputs,\n        isValid: action.formIsValid\n      };\n    default:\n      return state;\n  }\n};\n\nexport const useForm = (initialInputs, initialFormValidity) => {\n  \n  const [formState, dispatch] = useReducer(formReducer, {\n    inputs: initialInputs,\n    isValid: initialFormValidity\n  });\n  const inputHandler = useCallback((id, value, isValid) => {\n    dispatch({\n      type: \"INPUT_CHANGE\",\n      value: value,\n      isValid: isValid,\n      inputId: id\n    });\n  }, []);\n\n  const setFormData = useCallback((inputData, formValidity) => {\n    dispatch({\n      type: \"SET_DATA\",\n      inputs: inputData,\n      formIsValid: formValidity\n    });\n  }, []);\n\n  console.log(formState.inputs)\n  return [formState, inputHandler, setFormData];\n};\n","import React, { useContext } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nimport Input from \"../../shared/components/FormElements/Input\";\nimport {\n  VALIDATOR_REQUIRE,\n  VALIDATOR_MINLENGTH\n} from \"../../shared/util/validators\";\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\nimport Button from \"../../shared/components/FormElements/Button\";\nimport ImageUpload from \"../../shared/components/FormElements/ImageUpload\";\nimport { useForm } from \"../../shared/hooks/form-hook\";\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\nimport { AuthContext } from \"../../shared/context/auth-context\";\nimport \"./PlaceForm.css\";\n\nconst NewPlace = () => {\n  const auth = useContext(AuthContext);\n  const { error, clearError, isLoading, sendRequest } = useHttpClient();\n  const [formState, inputHandler] = useForm({\n    title: {\n      value: \"\",\n      isValid: false\n    },\n    description: {\n      value: \"\",\n      isValid: false\n    },\n    address: {\n      value: \"\",\n      isValid: false\n    },\n    image: {\n      value: null,\n      isValid: false\n    }\n  });\n\n  const history = useHistory();\n\n  const placeSubmitHandler = async event => {\n    event.preventDefault();\n    try {\n      const formData = new FormData();\n      formData.append(\"title\", formState.inputs.title.value);\n      formData.append(\"description\", formState.inputs.description.value);\n      formData.append(\"address\", formState.inputs.address.value);\n      formData.append(\"image\", formState.inputs.image.value);\n      await sendRequest(\n        `${process.env.REACT_APP_BACKEND_URL}/places`,\n        \"POST\",\n        formData,\n        {\n          Authorization: \"Bearer \" + auth.token\n        }\n      );\n      history.push(\"/\");\n    } catch (error) {\n      //Errors handled in http-hook\n    }\n  };\n\n  return (\n    <React.Fragment>\n      <ErrorModal error={error} onClear={clearError} />\n      <form className=\"place-form\" onSubmit={placeSubmitHandler}>\n        {isLoading && <LoadingSpinner asOverlay />}\n        <Input\n          id=\"title\"\n          element=\"input\"\n          type=\"text\"\n          label=\"title:\"\n          validators={[VALIDATOR_REQUIRE()]}\n          errorText=\"title required\"\n          onInput={inputHandler}\n        />\n        <Input\n          id=\"description\"\n          element=\"textarea\"\n          label=\"description:\"\n          validators={[VALIDATOR_MINLENGTH(4)]}\n          errorText=\"needs description with at least 4 characters...\"\n          onInput={inputHandler}\n        />\n        <Input\n          id=\"address\"\n          element=\"input\"\n          label=\"address:\"\n          validators={[VALIDATOR_REQUIRE()]}\n          errorText=\"please input correct address\"\n          onInput={inputHandler}\n        />\n        <ImageUpload\n          id=\"image\"\n          onInput={inputHandler}\n          // errorText=\"please select an image\"\n        />\n        <Button type=\"submit\" disabled={!formState.isValid}>\n          add place\n        </Button>\n      </form>\n    </React.Fragment>\n  );\n};\n\nexport default NewPlace;\n","import React, { useEffect, useState, useContext } from \"react\";\nimport { useParams, useHistory } from \"react-router-dom\";\n\nimport Button from \"../../shared/components/FormElements/Button\";\nimport Card from \"../../shared/components/UIElements/Card\";\nimport Input from \"../../shared/components/FormElements/Input\";\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\nimport {\n  VALIDATOR_REQUIRE,\n  VALIDATOR_MINLENGTH\n} from \"../../shared/util/validators\";\nimport { AuthContext } from \"../../shared/context/auth-context\";\nimport { useForm } from \"../../shared/hooks/form-hook\";\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\n\nimport \"./PlaceForm.css\";\n\nconst UpdatePlace = () => {\n  const auth = useContext(AuthContext);\n  const { isLoading, error, clearError, sendRequest } = useHttpClient();\n  const [loadedPlace, setLoadedPlace] = useState();\n\n  const placeId = useParams().placeId;\n  const history = useHistory();\n\n  const [formState, inputHandler, setFormData] = useForm(\n    {\n      title: {\n        value: \"\",\n        isValid: false\n      },\n      description: {\n        value: \"\",\n        isValid: false\n      }\n    },\n    false\n  );\n\n  useEffect(() => {\n    const fetchPlace = async () => {\n      try {\n        const responseData = await sendRequest(\n          `${process.env.REACT_APP_BACKEND_URL}/places/${placeId}`\n        );\n        setLoadedPlace(responseData.place);\n        setFormData(\n          {\n            title: {\n              value: responseData.place.title,\n              isValid: true\n            },\n            description: {\n              value: responseData.place.description,\n              isValid: true\n            }\n          },\n          true\n        );\n      } catch (error) {\n        //errors handled in http-hook\n      }\n    };\n    fetchPlace();\n  }, [sendRequest, placeId, setFormData]);\n\n  const placeUpdateSubmitHandler = async event => {\n    event.preventDefault();\n    try {\n      await sendRequest(\n        `${process.env.REACT_APP_BACKEND_URL}/places/${placeId}`,\n        \"PATCH\",\n        JSON.stringify({\n          title: formState.inputs.title.value,\n          description: formState.inputs.description.value\n        }),\n        {\n          \"Content-Type\": \"application/json\",\n          Authorization: \"Bearer \" + auth.token\n        }\n      );\n      history.push(`/${auth.userId}/places`);\n    } catch (error) {\n      //errors handled in http-hook\n    }\n  };\n\n  if (isLoading) {\n    return (\n      <div className=\"center\">\n        <LoadingSpinner asOverlay />\n      </div>\n    );\n  }\n\n  if (!loadedPlace && !error) {\n    return (\n      <div className=\"center\">\n        <Card>\n          <h2>couldn't find the place you're looking for...</h2>\n        </Card>\n      </div>\n    );\n  }\n\n  return (\n    <React.Fragment>\n      <ErrorModal error={error} onClear={clearError} />\n      {!isLoading && loadedPlace && (\n        <form className=\"place-form\" onSubmit={placeUpdateSubmitHandler}>\n          <Input\n            id=\"title\"\n            element=\"input\"\n            type=\"text\"\n            label=\"title:\"\n            validators={[VALIDATOR_REQUIRE()]}\n            errorText=\"please enter a valid title\"\n            onInput={inputHandler}\n            initialValue={loadedPlace.title}\n            initialValid={true}\n          />\n\n          <Input\n            id=\"description\"\n            element=\"textarea\"\n            label=\"description:\"\n            validators={[VALIDATOR_MINLENGTH(4)]}\n            errorText=\"please enter valid description\"\n            onInput={inputHandler}\n            initialValue={loadedPlace.description}\n            initialValid={true}\n          />\n          <Button type=\"submit\" disabled={!formState.isValid}>\n            update\n          </Button>\n        </form>\n      )}\n    </React.Fragment>\n  );\n};\n\nexport default UpdatePlace;\n","import React, { useState, useContext } from \"react\";\n\nimport Card from \"../../shared/components/UIElements/Card\";\nimport Input from \"../../shared/components/FormElements/Input\";\nimport Button from \"../../shared/components/FormElements/Button\";\nimport {\n  VALIDATOR_MINLENGTH,\n  VALIDATOR_EMAIL\n} from \"../../shared/util/validators\";\nimport { useForm } from \"../../shared/hooks/form-hook\";\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\nimport { VALIDATOR_REQUIRE } from \"../../shared/util/validators\";\nimport { AuthContext } from \"../../shared/context/auth-context\";\nimport ImageUpload from \"../../shared/components/FormElements/ImageUpload\";\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\n\nimport \"./Auth.css\";\n\nconst Auth = () => {\n  const auth = useContext(AuthContext);\n  const [isLoginMode, setIsLoginMode] = useState(true);\n  const { isLoading, error, clearError, sendRequest } = useHttpClient();\n\n  const [formState, inputHandler, setFormData] = useForm(\n    {\n      email: {\n        value: \"\",\n        isValid: false\n      },\n      password: {\n        value: \"\",\n        isValid: false\n      }\n    },\n    false\n  );\n\n  const switchModeHandler = () => {\n    if (!isLoginMode) {\n      setFormData(\n        {\n          ...formState.inputs,\n          name: undefined,\n          image: \"test\"\n        },\n        formState.inputs.email.isValid && formState.inputs.password.isValid\n      );\n    } else {\n      setFormData(\n        {\n          ...formState.inputs,\n          name: {\n            value: \"\",\n            isValid: false\n          },\n          image: {\n            value: null,\n            isValid: false\n          }\n        },\n        false\n      );\n    }\n    setIsLoginMode(prevMode => !prevMode);\n  };\n\n  const authSubmitHandler = async event => {\n    event.preventDefault();\n    if (isLoginMode) {\n      try {\n        const responseData = await sendRequest(\n          `${process.env.REACT_APP_BACKEND_URL}/users/login`,\n          \"POST\",\n          JSON.stringify({\n            email: formState.inputs.email.value,\n            password: formState.inputs.password.value\n          }),\n          {\n            \"Content-Type\": \"application/json\"\n          }\n        );\n        auth.login(responseData.userId, responseData.token);\n      } catch (error) {\n        //Errors being handled in http-hook\n      }\n    } else {\n      try {\n        const formData = new FormData();\n        formData.append(\"email\", formState.inputs.email.value);\n        formData.append(\"name\", formState.inputs.name.value);\n        formData.append(\"password\", formState.inputs.password.value);\n        formData.append(\"image\", formState.inputs.image.value);\n        console.log(formState.inputs);\n        const responseData = await sendRequest(\n          `${process.env.REACT_APP_BACKEND_URL}/users/signup`,\n          \"POST\",\n          formData\n        );\n        auth.login(responseData.userId, responseData.token);\n      } catch (error) {\n        //You guessed it...errors handled by the custom hook commented about ^\n      }\n    }\n  };\n\n  return (\n    <React.Fragment>\n      <ErrorModal error={error} onClear={clearError} />\n      <Card className=\"authentication\">\n        {isLoading && <LoadingSpinner asOverlay />}\n        <h2>please login</h2>\n        <hr />\n        <form onSubmit={authSubmitHandler}>\n          {!isLoginMode && (\n            <Input\n              element=\"input\"\n              id=\"name\"\n              type=\"text\"\n              label=\"name:\"\n              validators={[VALIDATOR_REQUIRE()]}\n              errorText=\"please enter your name\"\n              onInput={inputHandler}\n            />\n          )}\n          {!isLoginMode && (\n            <ImageUpload\n              center\n              id=\"image\"\n              onInput={inputHandler}\n              // errorText=\"please pick an image\"\n            />\n          )}\n          <Input\n            element=\"input\"\n            id=\"email\"\n            type=\"email\"\n            label=\"email:\"\n            validators={[VALIDATOR_EMAIL()]}\n            errorText=\"please add a valid email\"\n            onInput={inputHandler}\n          />\n          <Input\n            element=\"input\"\n            id=\"password\"\n            type=\"password\"\n            label=\"password:\"\n            autocomplete=\"current-password\"\n            validators={[VALIDATOR_MINLENGTH(6)]}\n            errorText=\"plesase add a password with at least 6 characters\"\n            onInput={inputHandler}\n          />\n          <Button type=\"submit\" disabled={!formState.isValid}>\n            {isLoginMode ? \"login\" : \"sign-up\"}\n          </Button>\n        </form>\n        <Button inverse onClick={switchModeHandler}>\n          switch to {isLoginMode ? \"sign-up\" : \"login\"}\n        </Button>\n      </Card>\n    </React.Fragment>\n  );\n};\n\nexport default Auth;\n","import { useState, useCallback, useEffect } from \"react\";\n\nlet logoutTimer;\n\nexport const useAuth = () => {\n  const [token, setToken] = useState(false);\n  const [tokenExpirationDate, setTokenExpirationDate] = useState();\n  const [userId, setUserId] = useState(false);\n\n  const login = useCallback((uid, token, expirationDate) => {\n    setToken(token);\n    setUserId(uid);\n    const tokenExpirationDate =\n      expirationDate || new Date(new Date().getTime() + 1000 * 60 * 60);\n    setTokenExpirationDate(tokenExpirationDate);\n    localStorage.setItem(\n      \"userData\",\n      JSON.stringify({\n        userId: uid,\n        token: token,\n        expiration: tokenExpirationDate.toISOString()\n      })\n    );\n  }, []);\n\n  const logout = useCallback(() => {\n    setToken(null);\n    setTokenExpirationDate(null);\n    setUserId(null);\n    localStorage.removeItem(\"userData\");\n  }, []);\n\n  useEffect(() => {\n    if (token && tokenExpirationDate) {\n      const remainingTime =\n        tokenExpirationDate.getTime() - new Date().getTime();\n      logoutTimer = setTimeout(logout, remainingTime);\n    } else {\n      clearTimeout(logoutTimer);\n    }\n  }, [token, logout, tokenExpirationDate]);\n\n  useEffect(() => {\n    const storedData = JSON.parse(localStorage.getItem(\"userData\"));\n    if (\n      storedData &&\n      storedData.token &&\n      new Date(storedData.expiration) > new Date()\n    ) {\n      login(\n        storedData.userId,\n        storedData.token,\n        new Date(storedData.expiration)\n      );\n    }\n  }, [login]);\n  return { token, login, logout, userId };\n};\n","import React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Redirect,\n  Switch\n} from \"react-router-dom\";\n\nimport UserPlaces from \"./places/pages/UserPlaces\";\nimport MainNavigation from \"./shared/components/Navigation/MainNavigation\";\nimport Users from \"./users/pages/Users\";\nimport NewPlace from \"./places/pages/NewPlace\";\nimport UpdatePlace from \"./places/pages/UpdatePlace\";\nimport Auth from \"./users/pages/Auth\";\nimport { AuthContext } from \"./shared/context/auth-context\";\nimport { useAuth } from \"./shared/hooks/auth-hook\";\n\nimport \"./App.css\";\n\n// example of code splitting. requires the use of a <Suspense>\n// component around the {routes} inside of <main>\n// const Users = React.lazy(() => import(\"./users/pages/Users\"));\n\nconst App = () => {\n  const { token, login, logout, userId } = useAuth();\n  let routes;\n\n  if (token) {\n    routes = (\n      <Switch>\n        <Route path=\"/\" exact>\n          <Users />\n        </Route>\n        <Route path=\"/:userId/places\" exact>\n          <UserPlaces />\n        </Route>\n        <Route path=\"/places/new\" exact>\n          <NewPlace />\n        </Route>\n        <Route path=\"/places/:placeId\">\n          <UpdatePlace />\n        </Route>\n        <Redirect to=\"/\" />\n      </Switch>\n    );\n  } else {\n    routes = (\n      <Switch>\n        <Route path=\"/\" exact>\n          <Users />\n        </Route>\n        <Route path=\"/:userId/places\" exact>\n          <UserPlaces />\n        </Route>\n        <Route path=\"/auth\">\n          <Auth />\n        </Route>\n        <Redirect to=\"/auth\" />\n      </Switch>\n    );\n  }\n\n  return (\n    <AuthContext.Provider\n      value={{\n        isLoggedIn: !!token,\n        token: token,\n        userId: userId,\n        login: login,\n        logout: logout\n      }}\n    >\n      <Router>\n        <MainNavigation />\n        <main>{routes}</main>\n      </Router>\n    </AuthContext.Provider>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}